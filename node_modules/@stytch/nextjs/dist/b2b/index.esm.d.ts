/// <reference types="react" />
import React from "react";
import { Callbacks, StyleConfig, StytchB2BUIConfig, StytchProjectConfigurationInput } from "@stytch/vanilla-js";
// We need to import the StytchB2BUIClient type to give the TSDoc parser a hint as to where it is from
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { IDPConsentScreenManifest } from "@stytch/vanilla-js/b2b";
interface StytchB2BProps<TProjectConfiguration extends StytchProjectConfigurationInput = Stytch.DefaultProjectConfiguration> {
    /**
     * An optional {@link StyleConfig} to customize the look and feel of the screen.
     *
     * @example
     * {
     *    fontFamily: 'Arial, Helvetica, sans-serif',
     *    width: '360px',
     *    primaryColor: '#19303D',
     * }
     */
    styles?: StyleConfig;
    /**
     * An optional {@link Callbacks} object.
     *
     * @example
     * {
     *   onError: ({message}) => {
     *      console.error('Stytch error', message)
     *   }
     * }
     *
     * @example
     * {
     *   onEvent: ({type, data}) => {
     *     if(type === StytchEventType.B2BMagicLinkAuthenticate) {
     *       console.log('Logged in with', data);
     *     }
     *   }
     * }
     */
    callbacks?: Callbacks<TProjectConfiguration>;
    /**
     * A {@link StytchB2BUIConfig} object. Add products and product-specific config to this object to change the login methods shown.
     *
     *
     * @example
     * {
     *   products: ['emailMagicLinks'],
     *   authFlowType: "Discovery",
     *   emailMagicLinksOptions: {
     *     discoveryRedirectURL: 'https://example.com/authenticate',
     *   },
     *   sessionOptions: {
     *     sessionDurationMinutes: 60,
     *   },
     * }
     *
     * @example
     * {
     *   products: ['emailMagicLinks', 'sso'],
     *   authFlowType: "Organization",
     *   emailMagicLinksOptions: {
     *     loginRedirectURL: 'https://example.com/authenticate',
     *     signupRedirectURL: 'https://example.com/authenticate',
     *   },
     *   ssoOptions: {
     *     loginRedirectURL: 'https://example.com/authenticate',
     *     signupRedirectURL: 'https://example.com/authenticate',
     *   },
     *   sessionOptions: {
     *     sessionDurationMinutes: 60,
     *   },
     * }
     */
    config: StytchB2BUIConfig;
}
type B2BIDPConsentManifestGenerator = (input: {
    scopes: string[];
    clientName: string;
}) => IDPConsentScreenManifest;
type B2BIdentityProviderProps = Omit<StytchB2BProps, "config"> & {
    getIDPConsentManifest?: B2BIDPConsentManifestGenerator;
};
/**
 * The Stytch B2B UI component.
 * This component can only be used with a {@link StytchB2BUIClient} client constructor
 * passed into the {@link StytchB2BProvider}
 *
 * See the {@link https://stytch.com/docs/b2b/sdks/javascript-sdk online reference}
 *
 * @example
 * <StytchB2B
 *   config={{
 *     authFlowType: "Organization",
 *     emailMagicLinksOptions: {
 *       loginRedirectURL: 'https://example.com/authenticate',
 *       signupRedirectURL: 'https://example.com/authenticate',
 *     },
 *     ssoOptions: {
 *       loginRedirectURL: 'https://example.com/authenticate',
 *       signupRedirectURL: 'https://example.com/authenticate',
 *     },
 *     sessionOptions: {
 *       sessionDurationMinutes: 60,
 *     }
 *   }}
 *   styles={{
 *     fontFamily: '"Helvetica New", Helvetica, sans-serif',
 *     primaryColor: '#0577CA',
 *     width: '321px',
 *   }}
 *   callbacks={{
 *     onEvent: (event) => console.log(event)
 *   }}
 * />
 * @param props {@link StytchB2BProps}
 */
declare const StytchB2B: <TProjectConfiguration extends Partial<import("@stytch/core/public").StytchProjectConfiguration> = Stytch.DefaultProjectConfiguration>({ styles, callbacks, config }: StytchB2BProps<TProjectConfiguration>) => React.JSX.Element;
/**
 * The Stytch B2B IDP component.
 * Parses OAuth Authorization params (client_id, scope, nonce, etc.) out of the page URL.
 * Requires the user to be logged in.
 * This component can only be used with a {@link StytchB2BUIClient} client constructor
 * passed into the {@link StytchB2BProvider}
 *
 * See the {@link https://stytch.com/docs/sdks/javascript-sdk online reference}
 *
 * @example
 * const styles = {
 *     container: {
 *       backgroundColor: '#e11e1e',
 *     },
 *     colors: {
 *       primary: '#ff00f7',
 *       secondary: '#5C727D',
 *     },
 *    }
 *
 * <B2BIdentityProvider
 *   styles={styles}
 *   callbacks={{
 *     onEvent: (event) => console.log(event)
 *   }}
 * />
 *
 * @param styles - An optional {@link StyleConfig} to customize the look and feel of the screen.
 * @param callbacks - An optional {@link Callbacks} object
 * @param getIDPConsentManifest - Optional {@link B2BIDPConsentManifestGenerator} to customize the consent screen.
 */
declare const B2BIdentityProvider: ({ styles, callbacks, getIDPConsentManifest }: B2BIdentityProviderProps) => React.JSX.Element;
export { StytchB2BProvider, useStytchB2BClient, useStytchMemberSession, useStytchMember, useStytchIsAuthorized, useStytchOrganization, withStytchB2BClient, withStytchMemberSession, withStytchMember, withStytchOrganization, withStytchPermissions } from "../StytchB2BContext-0ff0e987.js";
export { StytchB2B, B2BIdentityProvider };
export type { StytchB2BProviderProps } from "../StytchB2BContext-0ff0e987.js";
