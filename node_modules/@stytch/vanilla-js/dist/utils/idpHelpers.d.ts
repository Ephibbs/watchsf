import { IDPConsentItem } from '@stytch/core/public';
import { RBACPolicyRaw } from '@stytch/core';
export declare const containsCustomScopes: (scope: string) => boolean;
export declare const createBuiltinScopeDescriptions: (scopes: string[]) => IDPConsentItem[];
export declare const createCustomScopeDescriptions: (scopes: string[], rbacPolicy: RBACPolicyRaw | null) => string[];
export declare const fallbackConsentManifestGenerator: ({ scopes, clientName, rbacPolicy, }: {
    scopes: string[];
    clientName: string;
    rbacPolicy: RBACPolicyRaw | null;
}) => {
    header: string;
    items: IDPConsentItem[];
}[];
export type IDPSearchParams = {
    client_id: string;
    redirect_uri: string;
    response_type: string;
    scope: string;
    code_challenge?: string;
    state?: string;
    nonce?: string;
};
export declare const parseOAuthAuthorizeParams: (searchParams: string) => {
    error: string | null;
    params: IDPSearchParams;
};
