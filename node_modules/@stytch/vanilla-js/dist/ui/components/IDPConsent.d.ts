import React, { PropsWithChildren } from 'react';
import { OAuthAuthorizeStartOptions, OAuthAuthorizeStartResponse, OAuthAuthorizeSubmitOptions, OIDCClientPublic } from '../../IDPClient';
import { BootstrapData } from '@stytch/core';
import { StytchEvent, StytchSDKUIError } from '@stytch/core/public';
type IDPState = {
    loading: boolean;
    preflight: boolean;
    error: string | null;
    success: boolean;
    consent_required: boolean;
    oidc_client: OIDCClientPublic | null;
    grantable_scope: string;
    ungrantable_scope: string;
    redirect_uri: string;
};
interface IDPConsentState {
    state: IDPState;
    submit({ consent_granted }: {
        consent_granted: boolean;
    }): Promise<void>;
}
export declare const useIDPState: ({ oauthAuthorizeStart, oauthAuthorizeSubmit, onError, onEvent, }: {
    oauthAuthorizeStart(data: OAuthAuthorizeStartOptions): Promise<OAuthAuthorizeStartResponse & {
        grantable_scope: string;
        ungrantable_scope: string;
    }>;
    oauthAuthorizeSubmit(data: OAuthAuthorizeSubmitOptions): Promise<void>;
    onError(error: StytchSDKUIError): void;
    onEvent(event: StytchEvent): void;
}) => IDPConsentState;
type Props = IDPConsentState & {
    bootstrap: BootstrapData;
    bootstrapNotLoaded: boolean;
};
export declare const IDPConsent: React.FC<PropsWithChildren<Props>>;
export {};
