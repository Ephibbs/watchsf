import { SxProps, Theme } from '@mui/material';
import React, { ComponentType } from 'react';
import { InjectedComponents } from './componentInjection';
import { TableCoreProps } from './Table';
export declare const DEFAULT_TABLE_ROWS_PER_PAGE = 20;
export type PaginatedTableCoreProps<T> = TableCoreProps<T> & {
    /**
     * The page number currently being displayed.  0-indexed.
     */
    currentPage: number;
    /**
     * A callback to call when the next page or previous page buttons are clicked.
     */
    setCurrentPage(page: number): void;
    /**
     * The number of rows to display per page.
     */
    rowsPerPage?: number;
    /**
     * If data is loaded lazily, this function will be called when the next page is requested.
     */
    loadNext(): void;
    /**
     * Whether the table is currently loading data and should display a loading spinner.
     */
    isLoading?: boolean;
    /**
     * Metadata about the paginated data
     * cursor: The cursor to use to fetch the next page of data
     * total: The total number of items in the paginated data
     */
    metadata?: {
        cursor: string;
        total: number;
    };
    rowsPerPageOptions?: readonly number[];
    onRowsPerPageChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;
    keepConsistentContentHeight?: boolean;
    tablePaginationSx?: SxProps<Theme>;
};
export declare const PaginatedTableCore: <T extends object>({ currentPage, loadNext, isLoading, metadata, setCurrentPage, rowsPerPage, rowsPerPageOptions, onRowsPerPageChange, keepConsistentContentHeight, tablePaginationSx, TableComponent: Table, TypographyComponent: Typography, ...tableProps }: TableCoreProps<T> & {
    /**
     * The page number currently being displayed.  0-indexed.
     */
    currentPage: number;
    /**
     * A callback to call when the next page or previous page buttons are clicked.
     */
    setCurrentPage(page: number): void;
    /**
     * The number of rows to display per page.
     */
    rowsPerPage?: number | undefined;
    /**
     * If data is loaded lazily, this function will be called when the next page is requested.
     */
    loadNext(): void;
    /**
     * Whether the table is currently loading data and should display a loading spinner.
     */
    isLoading?: boolean | undefined;
    /**
     * Metadata about the paginated data
     * cursor: The cursor to use to fetch the next page of data
     * total: The total number of items in the paginated data
     */
    metadata?: {
        cursor: string;
        total: number;
    } | undefined;
    rowsPerPageOptions?: readonly number[] | undefined;
    onRowsPerPageChange?: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;
    keepConsistentContentHeight?: boolean | undefined;
    tablePaginationSx?: SxProps<Theme> | undefined;
} & InjectedComponents<"Typography"> & {
    TableComponent: React.ComponentType<TableCoreProps<T>>;
}) => JSX.Element;
