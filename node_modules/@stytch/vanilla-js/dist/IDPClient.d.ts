import { NetworkClient } from './NetworkClient';
import { ResponseCommon } from '@stytch/core/public';
export type OAuthAuthorizeStartOptions = {
    client_id: string;
    redirect_uri: string;
    response_type: string;
    scope: string;
};
export type OIDCClientPublic = {
    client_id: string;
    client_type: string;
    client_name: string;
    client_description: string;
};
export type OAuthAuthorizeStartResponse = ResponseCommon & {
    consent_required: boolean;
    oidc_client: OIDCClientPublic;
};
export type OAuthAuthorizeSubmitOptions = {
    client_id: string;
    redirect_uri: string;
    response_type: string;
    scope: string;
    state: string;
    nonce: string;
    code_challenge: string;
    consent_granted: boolean;
};
export declare class IDPClient {
    private _networkClient;
    constructor(_networkClient: NetworkClient);
    oauthAuthorizeStart: (data: OAuthAuthorizeStartOptions) => Promise<OAuthAuthorizeStartResponse>;
    oauthAuthorizeSubmit: (data: OAuthAuthorizeSubmitOptions) => Promise<void>;
}
